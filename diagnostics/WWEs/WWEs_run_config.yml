# Runtime yaml configuration file template for the MDTF-diagnostics package
# Create a copy of this file for personal use, and pass it to the framework
# with the -f | --configfile flag

# List of POD(s) to run
pod_list:
  - "WWEs"

# Case list entries (must be unique IDs for each simulation)
case_list:
  "CESM2_historical_r1i1p1f1_gn" :
    model: "CESM2"
    convention: "CMIP"
    startdate: "19800101"
    enddate: "19891231"

#  "tauu_Eday_CESM2_historical_r1i1p1f1_gn_19900101-19991231" :
#    model: "CESM2"
#    convention: "CMIP"
#    startdate: "19900101000000"
#    enddate: "19991231000000"

### Data location settings ###
# Required: full or relative path to ESM-intake catalog header file
DATA_CATALOG: "./diagnostics/WWEs/esm_catalog_CESM2_tauu_historical_r1i1p1f1.json"
# Optional: Parent directory containing observational data used by individual PODs.
# If defined, the framework assumes observational data is in OBS_DATA_ROOT/[POD_NAME]
OBS_DATA_ROOT: "../inputdata/obs_data"
# Required: Working directory location. Temporary files are written here.
# Final output is also written here if the OUTPUT_DIR is not defined.
WORK_DIR: "../wkdir"
# Optional: Location to write final output if you don't want it in the wkdir
OUTPUT_DIR: "../wkdir"
### Environment Settings ###
# Required: Location of the Anaconda/miniconda installation to use for managing
# dependencies (path returned by running `conda info --base`.)
conda_root: "/Users/eriley/anaconda3"
# Optional: Directory containing the framework-specific conda environments. This should
# be equal to the "--env_dir" flag passed to conda_env_setup.sh. If left
# blank, the framework will look for its environments in conda_root/envs
conda_env_root: "/Users/eriley/anaconda3/envs"
# Location of micromamba executable; REQUIRED if using micromamba
micromamba_exe: ""
### Data type settings ###
# set to true to handle data files > 4 GB
large_file: False
### Output Settings ###
# Set to true to have PODs save postscript figures in addition to bitmaps.
save_ps: True
# If true, leave pp data in OUTPUT_DIR after preprocessing; if false, delete pp data after PODs
# run to completion
save_pp_data: True
# Set to true to perform data translation; default is True:
translate_data: True
# Set to true to save HTML and bitmap plots in a .tar file.
make_variab_tar: False
# Set to true to overwrite results in OUTPUT_DIR; otherwise results saved
# under a unique name.
overwrite: False
# Generate html output for multiple figures per case
"make_multicase_figure_html": False
### Developer settings ###
# Set to True to run the preprocessor
run_pp: False
# Additional custom preprocessing scripts to run on data
# place these scripts in the MDTF-diagnostics/user_scripts directory
# The framework will run the specified scripts whether run_pp is set to True or False
user_pp_scripts:
  - ""
