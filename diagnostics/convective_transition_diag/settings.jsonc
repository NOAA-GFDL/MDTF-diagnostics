// Convection Transition
//
// This requires sub-daily-timescale precipitation rate, precipitable
// water vapor, air temperature. For further documentation and user
// options, see comments in convective_transition_diag_v1r3.py.
// This also requires the following Python modules:
// os, glob, json, dataset, numpy, scipy, matplotlib, networkx, warnings,
// numba, netcdf4.
// The code is in Python (2.7).
//
// All text to the right of an unquoted "//" is a comment and ignored, as well
// as blank lines (JSONC quasi-standard.) JSON doesn't support line continuation
// in strings, so you'll want to turn word wrap on in your editor.
//
{
  "settings" : {
    "driver" : "convective_transition_diag_v1r3.py",
    "long_name" : "Convection Transition",
    "realm" : "atmos",
    "description" : "Convective transition diagnostics",
    "pod_env_vars" : {
      // optional pod-specific shell environment variables:
      // Specify parameters for Convective Transition Diagnostic Package.
      // BULK_TROPOSPHERIC_TEMPERATURE_MEASURE: Set to one of the values "tave" 
      // or "qsat_int" to use that variable as the Bulk Tropospheric Temperature 
      // Measure.
      "BULK_TROPOSPHERIC_TEMPERATURE_VAR" : "tave",
      // RES: set Spatial Resolution (degree) for TMI Data (0.25, 0.50, 1.00).
      "RES" : "1.00",
      // SAVE_TAVE_QSAT_INT: save tave and qsat_int files (0=no, 1=yes).
      "SAVE_TAVE_QSAT_INT" : "0"
    },
    "runtime_requirements": {
      "python2": ["numpy", "scipy", "matplotlib", "netCDF4", "numba", "networkx"]
    }
  },
  //
  // USAGE varlist
  // var_name time-frequency [requirement]
  // - var_name: as found in src/fieldlist_*.json
  // - freq: mon (monthly), day, 6hr, 3hr, 1hr
  // - requirement = blank  (default = optional),
  //                 required (package cannot run without this)
  //                 required unless field_name field_name2 ...
  // - alternates:
  //
  // nb. if a variable is required at multiple time frequencies, list it 
  // separately for each one. Clearly the developer can just leave out 
  // optional files. However, it is always nice to get an upfront warning of
  // missing files.
  //
  "varlist" : [
    {
      "var_name" : "pr_var",
      "freq" : "1hr",
      "requirement" : "required"
    },{
      "var_name" : "ta_var",
      "freq" : "1hr",
      "requirement" : "required",
      "alternates" : ["tave_var"]
    },{
      "var_name" : "prw_var",
      "freq" : "1hr",
      "requirement" : "required",
      "alternates" : ["ta_var", "qa_var"]
    },{
      "var_name" : "tave_var",
      "freq" : "1hr",
      "requirement" : "required",
      "alternates" : ["ta_var", "qa_var"]
    },{
      "var_name" : "qsat_int_var",
      "freq" : "1hr",
      "requirement" : "required",
      "alternates" : ["ta_var", "qa_var"]
    }
  ]
}
