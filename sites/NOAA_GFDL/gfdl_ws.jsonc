// Configuration for MDTF-diagnostics driver script.
//
// All text to the right of an unquoted "//" is a comment and ignored, as well
// as blank lines (JSONC quasi-standard.) 
//
// Copy this file and customize the setting values as needed. Pass it to the 
// framework at the end of the command line (positionally) or with the 
// -f/--config-file flag.
//
{
   // The cases below correspond to the different test data sets.
  //
  // Note that the mdtf package does not yet handle multiple cases.
  //
  "case_list" : [
  //  {
  //    "CASENAME" : "CM4_piControl_c192_OM4p125_v5_proto1",
  //    "model" : "GFDL-CM4",
  //    "convention" : "CMIP",
  //    "FIRSTYR" : 2,
  //    "LASTYR" : 5,
  //    "CASE_ROOT_DIR" : "/archive/Raphael.Dussin/FMS2019.01.03_devgfdl_20210308/CM4_piControl_c192_OM4p125_v5_proto1/gfdl.ncrc4-intel18-prod-openmp/pp",
  //
  //    "pod_list": [
          // Optional: PODs to run for this model only (defaults to all)
  //        "Wheeler_Kiladis"
          // "EOF_500hPa"
         //"convective_transition_diag"
         // "MJO_suite"
         // "MJO_teleconnection"
         // "precip_diurnal_cycle"
         // "MJO_prop_amp"
         //"SM_ET_coupling"
   //   ]
  //  }
     {
      "CASENAME" : "c96L33_am4p0",
      "model" : "GFDL-AM4",
      "convention" : "CMIP",
      "FIRSTYR" : 1980,
      "LASTYR" : 1984,
     // "CASE_ROOT_DIR" : "/archive/Jessica.Liptak/awg/2021.02/c96L33_am4p0_cmip6Diag/gfdl.ncrc3-intel21-prod-openmp/pp",
      "CASE_ROOT_DIR" : "/net2/jml/inputdata/model/c96L33_am4p0/gfdl.ncrc4-intel-prod-openmp/pp",
      "pod_list": [
          // Optional: PODs to run for this model only (defaults to all)
        //  "Wheeler_Kiladis"
         //  "EOF_500hPa"
         //"convective_transition_diag"
          "MJO_suite"
         // "MJO_teleconnection"
         // "precip_diurnal_cycle"
         //"MJO_prop_amp"
         //"SM_ET_coupling"
        // "temp_extremes_distshape"
      ]
    }
  ],
  // PATHS ---------------------------------------------------------------------
  // Location of input and output data. If a relative path is given, it's 
  // resolved relative to the MDTF-diagnostics code directory.
  "MDTF_TMPDIR": "/net2/$USER/tmp",
  // Parent directory containing results from different models.
  //"MODEL_DATA_ROOT": "$MDTF_TMPDIR/inputdata/model",
  "MODEL_DATA_ROOT": "/net2/jml/inputdata/model",
  // Site-specific installation of observational data used by individual PODs.
  // This will be GCP'ed locally if running on PPAN.
  "OBS_DATA_REMOTE": "/home/oar.gfdl.mdtf/mdtf/inputdata/obs_data",

  // Parent directory containing observational data used by individual PODs.
  //"OBS_DATA_ROOT": "$MDTF_TMPDIR/inputdata/obs_data",
  "OBS_DATA_ROOT": "/home/oar.gfdl.mdtf/mdtf/inputdata/obs_data",

  // Working directory.
  "WORKING_DIR": "../wkdir",

  // Directory to write output files. Defaults to working directory if blank.
  //"OUTPUT_DIR": "$MDTF_TMPDIR/mdtf_out",
  "OUTPUT_DIR": "../wkdir",

  // GFDL ----------------------------------------------------------------------
  // Settings specific to operation at GFDL.

  // If running on GFDL PPAN, set $MDTF_TMPDIR to this location and 
  // create temp files here. Must be accessible via gcp.
  "GFDL_PPAN_TEMP": "$TMPDIR",

  // If running on a GFDL workstation, set $MDTF_TMPDIR to this location 
  // and create temp files here. Must be accessible via gcp.
  "GFDL_WS_TEMP": "/net2/$USER/tmp",
  
  // Set flag to run framework in 'online' mode, processing data as part of the 
  // FRE pipeline. Normally this is done by calling the mdtf_gfdl.csh wrapper 
  // script from the XML.
  "frepp": false,

  // Set flag search entire /pp/ directory for model data; default is to 
  // restrict to model component passed by FRE. Ignored if --frepp is not set.
  "ignore_component": false,

  // DATA ----------------------------------------------------------------------
  // Settings affecting the framework's retrieval of model data.

  // Method used to fetch model data.
  //"data_manager": "GFDL_auto",
  "data_manager": "Explicit_file",

  "config-file": "/net/jml/mdtf/MDTF-diagnostics/sites/NOAA_GFDL/gfdl_file_path_config.jsonc",

  // Method used to preprocess data.
  "preprocessor": "MDTFData",

  // Time (in seconds) to wait before giving up on transferring a data file to 
  // the local filesystem. Set to zero to disable.
  "file_transfer_timeout": 900,

  // Set to true to retain local temp directories of downloaded data.
  "keep_temp": false,

  // RUNTIME -------------------------------------------------------------------
  // Settings affecting the runtime environment of the PODs.
  "environment_manager": "conda",

  // Path to the Anaconda installation. Only used if environment_manager='Conda'. 
  // Set equal to "" to use conda from your system's $PATH.
  "conda_root": "/net/jml/miniconda3",

  // Root directory for Anaconda environment installs. Only used if 
  // environment_manager = 'Conda'. Set equal to '' to install in your system's 
  // default location.
  "conda_env_root": "/net/jml/miniconda3/envs",

  // Root directory for python virtual environments. Only used if 
  // environment_manager = 'Virtualenv'. Set equal to '' to install in your 
  // system's default location.
  "venv_root": "./envs/venv",

  // Root directory for R packages requested by PODs. Only used if 
  // environment_manager = 'Virtualenv'. Set equal to '' to install in your 
  // system library.
  "r_lib_root": "./envs/r_libs",

  // OUTPUT --------------------------------------------------------------------
  // Settings affecting what output is generated.

  // Set flag to have PODs save postscript figures in addition to bitmaps.
  "save_ps": false,

  // Set flag to have PODs save netCDF files of processed data.
  "save_nc": false,

  // Set flag to save all processed data except netcdf files.
  "save_non_nc": false,

  // Set flag to save HTML and bitmap plots in a .tar file.
  "make_variab_tar": false,

  // Set flag to overwrite results in OUTPUT_DIR; otherwise results saved under 
  // a unique name.
  "overwrite": false,

  // DEBUG ---------------------------------------------------------------------
  // Settings used in debugging.

  // Log verbosity level.
  "verbose": 1, 

  // Set flag for framework test. Data is fetched but PODs are not run.
  "test_mode": false,

  // Set flag for framework test. No external commands are run and no remote 
  // data is copied. Implies test_mode.
  "dry_run": false
}
